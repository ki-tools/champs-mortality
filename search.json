[{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://ki-tools.github.io/champs-mortality/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Computing Adjusted Rates and Fractions","text":"start, load package create variable points data directory set . Note directory fully populated synthetic data comes package purposes documentation examples. package useful real data obtainable CHAMPS. , keep mind results examples documentation meaningful.","code":"library(champsmortality)  data_dir <- file.path(system.file(package = \"champsmortality\"), \"testdata\")"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"read-the-data","dir":"Articles","previous_headings":"","what":"Read the data","title":"Computing Adjusted Rates and Fractions","text":"can read datasets validate structure following: validation ensures variables required perform calculations present along additional checks content variables. issues, see error message need correct error able use package data.","code":"d <- read_and_validate_data(data_dir) #> ✔ analytics_2022-05-24.csv #> ✔ vocabulary_2022-05-24.csv #> ✔ registry_2022-05-24.csv #> ✔ dss_2022-05-24.csv #> ✔ seasons.csv #> ✔ catchment_lookup.csv #> ✔ live_births.csv #> ✔ dhs.csv"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"process-the-data","dir":"Articles","previous_headings":"","what":"Process the data","title":"Computing Adjusted Rates and Fractions","text":"function, process_data() takes data read joins together create dataset ready analysis.","code":"dd <- process_data(d, start_year = 2017, end_year = 2020) #>  #> ── processing analysis dataset ───────────────────────────────────────────────── #> ✔ Calculated year of death from 'calc_dod' #> ✔ Used CHAMPS vocabulary to transform 'age_group' in analysis dataset #> ✔ Created a new variable 'age' that rolls up all neonates into one category to #> be compatible with DSS data #> ✔ Used CHAMPS vocabulary to transform 'calc_sex' in analysis dataset #> ✔ Classified Verbal Autopsy Inter-VA Cause 1 codes as 'Infection', 'Trauma', #> 'Other', or NA #> ✔ Removed 2879 records that occur before 2017 or after 2020 or have a missing #> date of death #> ✔ Resolved catchment names from catchment IDs using catchment lookup table #> ✔ Checked that values for 'catchment' in the analysis dataset are correct #> ✔ Modified some analysis set variables to match what is found in DSS data: #> • sex: set 'Indeterminate' and 'Unknown' to NA #> • location: 'other' to NA #> ✔ Checked that values for 'age' in the analysis dataset are correct #> ✔ Checked that values for 'calc_sex' in the analysis dataset are correct #> ✔ Checked that values for 'calc_location' in the analysis dataset are correct #> ✔ Checked that values for 'va_cod_iva' in the analysis dataset are correct #> ✔ Checked that values for 'site_name' in the seasons lookup are correct #> ✔ Calculated season of death #> ✔ Checked that values for 'season' in the seasons lookup are correct #>  #> ── processing maternal registry ──────────────────────────────────────────────── #> ✔ Removed 244 records with missing 'champsid' from maternal registry dataset #> ✔ The following 47 CHAMPS IDs have duplicate entries in the maternal registry #> dataset and only the first record for each was kept: SEAA00272, SFAA00050, #> SHAA00046, SHAA00052, SHAA00700, SHAA00882, SHAA00958, SHAA01135, SHAA01553, #> SHAA01898, SHAA01935, SHAA02086, SHAA02123, SHCC00294, SIAA00004, SIAA00076, #> SIAA00104, SIAA00327, SIAA00428, SIAA00518, SIAA00605, SIAA00851, SIAA00921, #> SIAA00935, SIAA01277, SIAA01735, SIAA01841, SIAA01891, SOAA00370, SOAA00831, #> SOAA00833, SOAA01383, SOCC00033, SOCC00043, SOCC00091, SOCC00207, SOCC00209, #> SOCC00225, SOCC00236, SOCC00249, SOCC00308, SSAA00025, SSAA00267, SSAA00476, #> SSAA01016, SSAA02207, STAA01650 #> ✔ Used CHAMPS vocabulary to transform 'education' in maternal registry dataset #> ✔ Checked that values for 'education' in the maternal registry dataset are #> correct #> ✔ Joined analysis dataset and maternal registry #>  #> ── checking live births ──────────────────────────────────────────────────────── #> ✔ Checked that values for 'site' in the live births data are correct #> ✔ Checked that values for 'catchment' in the live births data are correct #>  #> ── checking DHS data ─────────────────────────────────────────────────────────── #> ✔ Checked that values for 'site' in the DHS data are correct #> ✔ Checked that values for 'catchment' in the DHS data are correct #>  #> ── checking DSS ──────────────────────────────────────────────────────────────── #> ✔ Checked that values for 'site' in the DSS data are correct #> ✔ Checked that values for 'catchment' in the DSS data are correct #> ✔ Checked that values for 'age' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'va' in the DSS data are correct"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"site-and-catchment-listing","dir":"Articles","previous_headings":"","what":"Site and catchment listing","title":"Computing Adjusted Rates and Fractions","text":"convenient view list sites catchments available data. simple utiltiy function, get_site_info() can provide :","code":"get_site_info(dd) #> # A tibble: 12 × 4 #>    site  catchment min_year max_year #>    <chr> <chr>        <dbl>    <dbl> #>  1 S1    C11           2018     2020 #>  2 S2    C8            2017     2020 #>  3 S3    C10           2019     2020 #>  4 S3    C9            2017     2020 #>  5 S4    C12           2017     2020 #>  6 S5    C3            2019     2020 #>  7 S5    C4            2019     2020 #>  8 S5    C5            2019     2020 #>  9 S6    C1            2017     2020 #> 10 S6    C2            2018     2020 #> 11 S7    C6            2017     2020 #> 12 S7    C7            2017     2020"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"valid-conditions","dir":"Articles","previous_headings":"","what":"Valid conditions","title":"Computing Adjusted Rates and Fractions","text":"Computations data goal finding adjusted mortality fractions rates given condition found causal chain. see, can specified either using condition name regular expression indicating ICD10 codes indicate condition. convenience function lists available conditions data provided, valid_conditions(): searches CHAMPS data finds unique condition values found anywhere causal chain. ranking also provided higher ranking indicates condition found frequently data condition lower ranking.","code":"valid_conditions(dd) #> # A tibble: 54 × 2 #>    condition                            `causal chain rank` #>    <chr>                                              <int> #>  1 Perinatal asphyxia/hypoxia                             1 #>  2 Neonatal preterm birth complications                   2 #>  3 Lower respiratory infections                           3 #>  4 Neonatal sepsis                                        4 #>  5 Sepsis                                                 5 #>  6 Congenital birth defects                               6 #>  7 Other neonatal disorders                               7 #>  8 Malnutrition                                           8 #>  9 Meningitis/Encephalitis                                9 #> 10 Malaria                                               10 #> # … with 44 more rows"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"getting-rates-and-fractions","dir":"Articles","previous_headings":"","what":"Getting Rates and Fractions","title":"Computing Adjusted Rates and Fractions","text":"main function package computes factor-adjusted mortality rates fractions specified set sites catchments. details methodology can found article. function get_rates_and_fractions(). takes several parameters, many defaults, details parameters can found function reference site. article cover many examples illustrate different ways function can used. simple example getting rates fractions condition “Lower respiratory infections”: applies calculations site independently. site, data catchments combined. show get results individual catchments later. main arguments input data, dd condition. specify optional parameter cond_name_short “LRI”. used tabular graphical outputs. seen printed output, sites adjustment variables others adjusted location. site “S7”, “location” “va” significant can adjust one variable two variables one “age”, just “location” chosen.","code":"graf <- get_rates_and_fractions(   dd,   condition = \"Lower respiratory infections\",   cond_name_short = \"LRI\" ) #> Processing site:  S1 #>   no adjustment variables #> Processing site:  S2 #>   no adjustment variables #> Processing site:  S3 #>   using adjustment variable: location #> Processing site:  S4 #>   no adjustment variables #> Processing site:  S5 #>   using adjustment variable: location #> Processing site:  S6 #>   no adjustment variables #> Processing site:  S7 #>   using adjustment variable: location #>   other significant factors not adjusted for: va"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"examining-the-output","dir":"Articles","previous_headings":"Getting Rates and Fractions","what":"Examining the Output","title":"Computing Adjusted Rates and Fractions","text":"output function named list site, contains many pieces information site including underlying statistics went calculations. Note: Great care gone validating outputs functions package, strongly encourage user examine underlying statistics assumptions ensure results correct. Let’s examine high level returned function site S6: first elements simply documenting input parameters went calculations. Specifically: Many inputs defaults didn’t specify. elements mits cond tables capture information used deciding whether factors adjusted . contain one row factor, e.g.: row contains information went calculation whether factor statistically significantly associated MITS consent. table element contains . example, factor age: see counts MITS vs. non-MITS broken age. chi-square test carried table determine p-value. factor significant sufficiently non-missing data (default 20%), candidate adjustment. pop_mits output reports statistics number stillbirths -5 deaths plus stillbirths catchment site. output can_use_dss specifies whether site consists -DSS sites helps determine combine statistics across sites, described detail . outputs acMR_* provide -cause mortality rate DSS DHS data sources used calculations. interesting outputs rates fractions: additional outputs rate_* provide additional information went rate fraction calculations.","code":"str(graf$S6, max.level = 1, give.attr = FALSE) #> List of 16 #>  $ site             : chr \"S6\" #>  $ catchments       : chr [1:2] \"C1\" \"C2\" #>  $ inputs           :List of 10 #>  $ adjust_vars      : NULL #>  $ mits             : tibble [6 × 16] (S3: tbl_df/tbl/data.frame) #>  $ cond             : tibble [6 × 10] (S3: tbl_df/tbl/data.frame) #>  $ pop_mits         : tibble [1 × 3] (S3: tbl_df/tbl/data.frame) #>  $ crude_decoded    : int 211 #>  $ crude_condition  : int 3 #>  $ can_use_dss      : logi FALSE #>  $ acMR_dss         : num 574 #>  $ acMR_dhs         : num 340 #>  $ frac             : tibble [2 × 9] (S3: tbl_df/tbl/data.frame) #>  $ rate             : tibble [2 × 8] (S3: tbl_df/tbl/data.frame) #>  $ rate_data        :List of 6 #>  $ rate_data_grouped:'data.frame':   1 obs. of  5 variables: graf$S6$inputs #> $condition #> [1] \"Lower respiratory infections\" #>  #> $icd10_regex #> NULL #>  #> $maternal #> [1] FALSE #>  #> $cond_name_short #> [1] \"LRI\" #>  #> $causal_chain #> [1] TRUE #>  #> $factor_groups #> NULL #>  #> $pval_cutoff #> [1] 0.1 #>  #> $pct_na_cutoff #> [1] 20 #>  #> $adjust_vars_override #> NULL #>  #> $per #> [1] 10000 graf$S6$mits #> # A tibble: 6 × 16 #>   site  catchment factor   start…¹ end_y…² table        pval n_dss na_dss n_mits #>   <chr> <chr>     <fct>      <dbl>   <dbl> <list>      <dbl> <dbl>  <dbl>  <int> #> 1 S6    C1, C2    age         2017    2020 <tibble> 9.21e- 4     0      0    212 #> 2 S6    C1, C2    sex         2017    2020 <tibble> 4.89e- 1     0      0    211 #> 3 S6    C1, C2    educati…    2017    2020 <tibble> 9.56e- 1     0      0     89 #> 4 S6    C1, C2    season      2017    2020 <tibble> 1.08e- 2     0      0    212 #> 5 S6    C1, C2    location    2017    2020 <tibble> 2.57e-37     0      0    212 #> 6 S6    C1, C2    va          2017    2020 <tibble> 1.32e- 5     0      0    201 #> # … with 6 more variables: n_non_mits <int>, na_mits <int>, na_non_mits <int>, #> #   n_na <dbl>, n_tot <dbl>, pct_na <dbl>, and abbreviated variable names #> #   ¹​start_year, ²​end_year graf$S6$mits$table[[1]] #> # A tibble: 4 × 3 #>   level       MITS `non-MITS` #>   <fct>      <dbl>      <dbl> #> 1 Stillbirth   106        393 #> 2 Neonate       93        376 #> 3 Infant         9         81 #> 4 Child          4         66 graf$S6$pop_mits #> # A tibble: 1 × 3 #>   site  stillbirths u5d_sb #>   <chr>       <dbl>  <dbl> #> 1 S6            499   1128 graf$S6$rate #> # A tibble: 2 × 8 #>   site  catchments var    label                        allca…¹   est lower upper #>   <chr> <chr>      <chr>  <chr>                          <dbl> <dbl> <dbl> <dbl> #> 1 S6    C1, C2     cTU5MR Crude total under-5 mortali…    457.  6.50  2.36  15.1 #> 2 S6    C1, C2     aTU5MR Adjusted total under-5 mort…    457.  6.50  2.36  15.1 #> # … with abbreviated variable name ¹​allcauseMR graf$S6$frac #> # A tibble: 2 × 9 #>   site  catchments var   label                  decode condi…¹   est lower upper #>   <chr> <chr>      <chr> <chr>                   <int>   <int> <dbl> <dbl> <dbl> #> 1 S6    C1, C2     cCSMF Crude cause-specific …    211       3  1.42 0.515  3.30 #> 2 S6    C1, C2     aCSMF Adjusted cause-specif…    211       3  1.42 0.515  3.30 #> # … with abbreviated variable name ¹​condition"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"additional-inputs-to-get_rates_and_fractions","dir":"Articles","previous_headings":"Getting Rates and Fractions","what":"Additional inputs to get_rates_and_fractions()","title":"Computing Adjusted Rates and Fractions","text":"noteworthy inputs get_rates_and_fractions(). full documentation can refer function reference site. Suppose want calculate rates fractions just site “S6” condition malaria, causal chain. case, don’t want consider data stillbirths: , specify looking causal chain, set causal_chain = FALSE (default TRUE).","code":"res <- get_rates_and_fractions(   dd,   sites = \"S6\",   causal_chain = FALSE,   condition = \"Malaria\",   factor_groups = list(age = list(     Neonate = \"Neonate\",     Infant = \"Infant\",     Child = \"Child\"   )) ) #>   no adjustment variables"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"recoding-factor-groups","dir":"Articles","previous_headings":"Getting Rates and Fractions > Additional inputs to get_rates_and_fractions()","what":"Recoding factor groups","title":"Computing Adjusted Rates and Fractions","text":"specify want include stillbirths, previous example provided argument factor_groups. argument taken named list, possible entry relating one factors. Inside list, mapping can made left-hand-side indicating name new factor level right-hand-side indicating levels original factor include calculation. example, specify want define new breakdown age one category “Infant” includes “Neonate” “Infant” another, “Child” maps existing category “Child”. Additionally, suppose want break education two groups, “Lower” - comprised “None” “Primary”, “Upper” - comprised “Secondary” “Tertiary”. specifying following input factor_groups: groupings can useful dealing condition low counts. category one factors provided specification, cases factor level excluded analysis. example, previous examples, calculations include stillbirths. example, looking neonates:","code":"list(   age = list(     Infant = c(\"Neonate\", \"Infant\"),     Child = \"Child\"   ),   education = list(     \"Lower\" = c(\"None\", \"Primary\"),     \"Upper\" = c(\"Secondary\", \"Tertiary\")   ) ) #> $age #> $age$Infant #> [1] \"Neonate\" \"Infant\"  #>  #> $age$Child #> [1] \"Child\" #>  #>  #> $education #> $education$Lower #> [1] \"None\"    \"Primary\" #>  #> $education$Upper #> [1] \"Secondary\" \"Tertiary\" npbc_cc <- get_rates_and_fractions(dd,   sites = \"S1\",   condition = \"Neonatal preterm birth complications\",   cond_name = \"NPBC\",   causal_chain = TRUE,   factor_groups = list(age = list(Neonate = \"Neonate\")) ) #>   no adjustment variables"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"calculating-for-subset-of-sites-and-catchments","dir":"Articles","previous_headings":"Getting Rates and Fractions > Additional inputs to get_rates_and_fractions()","what":"Calculating for subset of sites and catchments","title":"Computing Adjusted Rates and Fractions","text":"previous examples, results applied catchments within site. wish perform initial analysis obtain estimates one catchment, “C1” site “S6”: Suppose want obtain results just subset sites catchments:","code":"graf <- get_rates_and_fractions(   dd,   sites = \"S6\",   catchments = \"C1\",   condition = \"Lower respiratory infections\",   cond_name_short = \"LRI\" ) #>   no adjustment variables graf <- get_rates_and_fractions(   dd,   sites = c(\"S5\", \"S6\"),   catchments = c(\"C1\", \"C4\", \"C5\"),   condition = \"Lower respiratory infections\",   cond_name_short = \"LRI\" ) #> Processing site:  S5 #> ℹ The following catchments are not found in the data for site S5 and will be #> removed from the calculations for this site: C1 #>   using adjustment variable: location #> Processing site:  S6 #> ℹ The following catchments are not found in the data for site S6 and will be #> removed from the calculations for this site: C4, C5 #>   no adjustment variables"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"overriding-adjustment-variables","dir":"Articles","previous_headings":"Getting Rates and Fractions > Additional inputs to get_rates_and_fractions()","what":"Overriding adjustment variables","title":"Computing Adjusted Rates and Fractions","text":"Suppose calculated rates fractions examined underlying data determined even though factor wasn’t significant, close enough want force computations adjust factor, can use adjust_vars_override argument. example, suppose want force one previous examples adjust “age” “location”:","code":"graf <- get_rates_and_fractions(   dd,   sites = \"S6\",   catchments = \"C1\",   condition = \"Lower respiratory infections\",   cond_name_short = \"LRI\",   adjust_vars_override = c(\"age\", \"location\") ) #>   using override adjustment variables:age, location"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"finer-control-over-condition-specification","dir":"Articles","previous_headings":"Getting Rates and Fractions > Additional inputs to get_rates_and_fractions()","what":"Finer control over condition specification","title":"Computing Adjusted Rates and Fractions","text":"Conditions can specified using valid value valid_conditions(dd) regular expression specifying ICD10 codes define condition, . causal_chain = TRUE, condition ICD10 codes checked underlying, immediate, morbid conditions. FALSE, just underlying checked. example, get statistics neural tube defects, can specify search cases ICD10 codes begin “Q00”, “Q01”, “Q05”. specify regular expression, can provide string “Q00|Q01|^Q05”. , “^” means “starts-”, “|” means “”. condition icd10_regex provided, searched cases meet either condition ICD10 specification included. example wanted look rates fractions cases underlying cause either condition “Congenital birth defects” NTD, can following: Note can also provide multiple conditions, case calculation cases specified conditions:","code":"ntd_cc <- get_rates_and_fractions(   dd,   icd10_regex = \"^Q00|^Q01|^Q05\",   cond_name = \"NTD+CBD\" ) #> Processing site:  S1 #>   no adjustment variables #> Processing site:  S2 #>   no adjustment variables #> Processing site:  S3 #>   no adjustment variables #> Processing site:  S4 #>   no adjustment variables #> Processing site:  S5 #>   no adjustment variables #> Processing site:  S6 #>   no adjustment variables #> Processing site:  S7 #>   no adjustment variables ntd_cbd_cc <- get_rates_and_fractions(   dd,   condition = \"Congenital birth defects\",   icd10_regex = \"^Q00|^Q01|^Q05\",   cond_name = \"NTD+CBD\" ) #> Processing site:  S1 #>   no adjustment variables #> Processing site:  S2 #>   no adjustment variables #> Processing site:  S3 #>   no adjustment variables #> Processing site:  S4 #>   no adjustment variables #> Processing site:  S5 #>   no adjustment variables #> Processing site:  S6 #>   no adjustment variables #> Processing site:  S7 #>   using adjustment variable: va sep_uc <- get_rates_and_fractions(   dd,   sites = \"S1\",   causal_chain = FALSE,   condition = c(\"Sepsis\", \"Neonatal sepsis\"),   cond_name = \"Sepsis\" ) #>   no adjustment variables"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"maternal-conditions","dir":"Articles","previous_headings":"Getting Rates and Fractions > Additional inputs to get_rates_and_fractions()","what":"Maternal conditions","title":"Computing Adjusted Rates and Fractions","text":"can also calculate rates fractions maternal conditions. list valid maternal conditions can obtained following: Suppose want calculate statistics “Maternal hypertension”. , simply provide condition specify maternal = TRUE. lets function know look maternal conditions. Note case, value causal_chain apply ignored.","code":"valid_maternal_conditions(dd) #> # A tibble: 39 × 2 #>    condition                                    rank #>    <chr>                                       <int> #>  1 Maternal hypertension                           1 #>  2 Placental complications                         2 #>  3 Other labor and delivery complications          3 #>  4 Chorioamnionitis and membrane complications     4 #>  5 Obstructed labor and fetal malpresentation      5 #>  6 Other maternal factor                           6 #>  7 Multiple gestation                              7 #>  8 Umbilical cord complications                    8 #>  9 Premature Rupture of membranes                  9 #> 10 HIV                                            10 #> # … with 29 more rows htn_s1 <- get_rates_and_fractions(dd,   sites = \"S1\",   condition = \"Maternal hypertension\",   maternal = TRUE,   cond_name = \"HTN\" ) #>   no adjustment variables"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"batch-rates-and-fractions","dir":"Articles","previous_headings":"Getting Rates and Fractions","what":"Batch rates and fractions","title":"Computing Adjusted Rates and Fractions","text":"case like compute rates fractions large number site/catchment/condition/etc. combinations, can use function batch_rates_and_fractions(). takes input csv following: identifies two scenarios want run, first Perinatal asphyxia/hypoxia age groups “Neonate”, “Infant”, “Child” causal chain site “S6” catchments “C1” “C2”. Note input multiple values, concatenate semicolon. function batch_rates_and_fractions() takes inputs runs get_rates_and_fractions(). output list results type seen previously. csv approach can nice succinctly identifying large number scenarios run, particularly want get rates fractions individual catchment several sites, want look several conditions, top 10. drawback batch processing approach quite full control input parameters, custom factor groupings, etc. One write custom script iterate scenarios rare occasions detailed specification required.","code":"inputs_csv <- tempfile(fileext = \".csv\") writeLines(   c(     \"site,catchment,age,condition,icd10_regex,causal_chain,maternal\",     \"S6,C1;C2,Neonate;Infant;Child,Perinatal asphyxia/hypoxia,,TRUE,FALSE\",     \"S6,C1,Stillbirth,Congenital birth defects,,FALSE,FALSE\"   ),   inputs_csv ) bat1 <- batch_rates_and_fractions(dd, inputs_csv) #>   no adjustment variables #>   no adjustment variables inputs2 <- list(   list(     site = \"S6\",     catchment = c(\"C1\", \"C2\"),     age = c(\"Neonate\", \"Infant\", \"Child\"),     condition = \"Perinatal asphyxia/hypoxia\",     icd10_regex = NULL,     causal_chain = TRUE,     maternal = FALSE   ),   list(     site = \"S6\",     catchment = \"C1\",     age = \"Stillbirth\",     condition = \"Congenital birth defects\",     icd10_regex = NULL,     causal_chain = FALSE,     maternal = FALSE   ) )  bat2 <- batch_rates_and_fractions(dd, inputs2) #>   no adjustment variables #>   no adjustment variables"},{"path":"https://ki-tools.github.io/champs-mortality/articles/analysis.html","id":"postprocessing","dir":"Articles","previous_headings":"","what":"Postprocessing","title":"Computing Adjusted Rates and Fractions","text":"processed several scenarios, can useful conslidate output simple table one row per scenario relevant statistics. can done function rates_fracs_to_df(). example, turn previous batch processing result table, can following Note addition results batch processing, can also apply function results get_rates_and_fractions(). example, first example article, calculated LRI statistics every site catchment stored result object named graf. can consolidate output following:","code":"tbl <- rates_fracs_to_df(bat1) dplyr::glimpse(tbl) #> Rows: 2 #> Columns: 21 #> $ site            <chr> \"S6\", \"S6\" #> $ catchments      <chr> \"C1,C2\", \"C1\" #> $ age             <chr> \"Neonate,Infant,Child\", \"Stillbirth\" #> $ condition       <chr> \"Perinatal asphyxia/hypoxia\", \"Congenital birth defect… #> $ cond_name_short <chr> \"Perinatal asphyxia/hypoxia\", \"Congenital birth defect… #> $ dss_only        <lgl> FALSE, TRUE #> $ DeCoDe          <int> 105, 38 #> $ n               <int> 79, 0 #> $ cCSMF           <dbl> 75.2381, 0.0000 #> $ cCSMF_LL        <dbl> 67.85097235, 0.00513981 #> $ cCSMF_UL        <dbl> 81.610365, 4.897288 #> $ aCSMF           <dbl> 75.2381, 0.0000 #> $ aCSMF_LL        <dbl> 67.85097235, 0.00513981 #> $ aCSMF_UL        <dbl> 81.610365, 4.897288 #> $ cCSMR           <dbl> 251.481, 0.000 #> $ cCSMR_LL        <dbl> 226.7897844, 0.0135382 #> $ cCSMR_UL        <dbl> 272.7801, 12.8994 #> $ aCSMR           <dbl> 251.481, 0.000 #> $ aCSMR_LL        <dbl> 226.7897844, 0.0135382 #> $ aCSMR_UL        <dbl> 272.7801, 12.8994 #> $ adj_factors     <chr> \"None\", \"None\" rates_fracs_to_df(graf) #> # A tibble: 1 × 21 #>   site  catch…¹ age   condi…² cond_…³ dss_o…⁴ DeCoDe     n cCSMF cCSMF…⁵ cCSMF…⁶ #>   <chr> <chr>   <chr> <chr>   <chr>   <lgl>    <int> <int> <dbl>   <dbl>   <dbl> #> 1 S6    C1      Stil… Lower … LRI     TRUE        83     3  3.61    1.32    8.25 #> # … with 10 more variables: aCSMF <dbl>, aCSMF_LL <dbl>, aCSMF_UL <dbl>, #> #   cCSMR <dbl>, cCSMR_LL <dbl>, cCSMR_UL <dbl>, aCSMR <dbl>, aCSMR_LL <dbl>, #> #   aCSMR_UL <dbl>, adj_factors <chr>, and abbreviated variable names #> #   ¹​catchments, ²​condition, ³​cond_name_short, ⁴​dss_only, ⁵​cCSMF_LL, ⁶​cCSMF_UL"},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"champs-analytics-dataset","dir":"Articles","previous_headings":"","what":"CHAMPS Analytics Dataset","title":"Datasets","text":"dataset come package can obtained CHAMPS LabKey name “CHAMPS Analytics Dataset”. contains information individual case including demographics cause death. many variables dataset following used package: Champsid: CHAMPS ID Site Name: Site name Catchment Id: Catchment ID Calc Location: Location death (community / facility / ) Calc Sex: sex child (coded CHAMPS codes) Age Group: age group child (coded CHAMPS codes) IC Champs Group Desc: CHAMPS category immediate cause death UC Champs Group Desc: CHAMPS category underlying cause death Morbid Cond 01 Champs Group Desc: CHAMPS category morbid condition 1 Morbid Cond 02 Champs Group Desc: CHAMPS category morbid condition 2 Morbid Cond 03 Champs Group Desc: CHAMPS category morbid condition 3 Morbid Cond 04 Champs Group Desc: CHAMPS category morbid condition 4 Morbid Cond 05 Champs Group Desc: CHAMPS category morbid condition 5 Morbid Cond 06 Champs Group Desc: CHAMPS category morbid condition 6 Morbid Cond 07 Champs Group Desc: CHAMPS category morbid condition 7 Morbid Cond 08 Champs Group Desc: CHAMPS category morbid condition 8 Underlying Cause Calc: ICD10 code underlying cause death Immediate COD: ICD10 code immediate cause death Morbid Condition 01: ICD10 code morbid condition 1 Morbid Condition 02: ICD10 code morbid condition 2 Morbid Condition 03: ICD10 code morbid condition 3 Morbid Condition 04: ICD10 code morbid condition 4 Morbid Condition 05: ICD10 code morbid condition 5 Morbid Condition 06: ICD10 code morbid condition 6 Morbid Condition 07: ICD10 code morbid condition 7 Morbid Condition 08: ICD10 code morbid condition 8 Main Maternal Disease Condition: ICD10 code main maternal condition Main Maternal Champs Group Desc: CHAMPS category main maternal condition MITS Flag: MITS procedure completed? (0/1) M00060: case DeCoDed? (0/1) Calc Dod: Date death Caretakers Religion: Caretaker’s religion VA Cause1 Iva: Verbal Autopsy Inter-VA Cause 1 - ICD10 code (used classify trauma infection) Note column names listed , matching snake case (e.g. Calc Dod -> calc_dod) version. match expected, code package return error.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"maternal-registry-dataset","dir":"Articles","previous_headings":"","what":"Maternal Registry Dataset","title":"Datasets","text":"maternal registry dataset also come package available LabKey name “2.”Maternal Registry Forms table”. mainly used link mother’s education cases analytics dataset. following variables used package: Mort Id: CHAMPS ID Mat 0010: estimated maternal age Mat 0011: known maternal age Mat 0013: maternal education (coded CHAMPS codes)","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"champs-vocabulary","dir":"Articles","previous_headings":"","what":"Champs Vocabulary","title":"Datasets","text":"previous two datasets variables coded CHAMPS codes, meaningful present users. CHAMPS vocabulary file maps CHAMPS codes user-friendly names. available LabKey CHAMPS de-identified data request. champs_local_code: CHAMPS code c_name: name associated code c_pref_name: preferred name associated code","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"dss","dir":"Articles","previous_headings":"","what":"DSS","title":"Datasets","text":"addition data specific CHAMPS cases, methods package also need information non-CHAMPS child mortality CHAMPS catchments. Data Demographic Surveillance Sites (DSS) tabulated CHAMPS way can easily used package. data, although individual-level data, must obtained directly CHAMPS. aggregate data contains tabulations deaths site broken factors (“sex”, “education”, “season”, “location”, “va”). site: site name catchment: catchment name age: age group - one “Stillbirth”, “Neonate”, “Infant”, “Child” factor: factor name (e.g. sex) level: factor level n: number deaths period_start_year: period start year period_end_year: period end year Note: Due nature dataset aggregated age crossed factors, can adjust one factor age + one factor. Also since statistics aggregated across whole time period (multiple years), currently compute statistics broken year.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"dhs","dir":"Articles","previous_headings":"","what":"DHS","title":"Datasets","text":"following catchments DSS data: Bangladesh, Faridpur Mali, Bamako Sierra Leone, Makeni Mozambique, Quelimane catchments, use alternate surveillance nubmers DHS, particularly calculated globaldatalab.org. dataset manually put together pulling statistics site. contains following variables: site: site name catchment: catchment name year: year age: one “U5”, “Neonate”, “Infant”, “Child”, “Neonate + Infant” (options provided site translated accordingly package calculations) rate: mortality rate specified age group specified year, per 10k live births note: extra notes data point","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"live-births","dir":"Articles","previous_headings":"","what":"Live Births","title":"Datasets","text":"total number live births required mortality rate fraction calculations. dataset manually constructed DSS data following variables: site: site name catchment: catchment name year: year live_births: number live births according DSS data, although individual-level data, must obtained directly CHAMPS.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"season-lookup","dir":"Articles","previous_headings":"","what":"Season Lookup","title":"Datasets","text":"season lookup table used determine season (rainy dry) case occured . comes package manually constructed using literature resource season start end dates location. site: site name season: season - one “Dry” “Rainy” start: season start date end: season end date","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/datasets.html","id":"catchment-lookup","dir":"Articles","previous_headings":"","what":"Catchment Lookup","title":"Datasets","text":"Catchments analytics dataset coded identifier. lookup table used translate identifier meaningful catchment name. site_name: site name catchment: catchment name catchment_id: catchment ID - three digit string padded zeros, e.g. “001”","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"can install development version champsmortality following: installed, load library:","code":"install.packages(\"remotes\") # one time only remotes::install_github(\"ki-tools/champs-mortality\") library(champsmortality)"},{"path":"https://ki-tools.github.io/champs-mortality/articles/getting-started.html","id":"data-setup","dir":"Articles","previous_headings":"Installation","what":"Data setup","title":"Getting Started","text":"first time use package, need place appropriate data files data directory package pull perform calculations. function create_dataset_directory() provided help get set . something needs done . create dataset directory temporary location. setup, choose directory location persist access time analyses future. creates directory copies data files come package: files come package. described greater detail next article. config.yaml file contains pointers dataset required analysis: entry specifies file name required data file. Note three datasets already exist additional 5 don’t come package due sensitive nature. datasets can obtained CHAMPS information contents structure provided next section.","code":"data_dir <- tempfile() create_dataset_directory(data_dir) #> ✔ The directory '/tmp/Rtmpsh2yKy/file2c3d447352f9' is ready for the appropriate #>   data files to be placed in it. The following datasets should be placed in #>   this directory: #>  #> 1. CHAMPS Analytics Dataset: This dataset is available as a downloadable file #>    from LabKey and is continuously updated. It contains most of the CHAMPS #>    variables that are needed for the analysis. #> 2. Maternal Registry Forms table: This dataset is also available as a #>    downloadable file from LabKey and contains information about maternal age #>    and education. #> 3. CHAMPS vocabulary: This dataset provides a lookup table for all CHAMPS #>    codes, providing a corresponding 'name' and 'preferred name' for each. This #>    file is accessible from the CHAMPS L2 dataset from dataverse. #> 4. DSS: This dataset contains counts of cases from the demographic surveillance #>    system (DSS) corresponding to each CHAMPS site and catchment area, only for #>    DSS cases that are not in the CHAMPS data. These counts are broken down by #>    age group, year, location of death, season of death, maternal education, sex #>    of child, and verbal autopsy cause of death. #> 5. Season definition: This dataset is a csv file containing rainy and dry #>    season date ranges for each site, which will be used to classify the season #>    in which each case occurs. A dataset with known season definitions, #>    '/tmp/Rtmpsh2yKy/file2c3d447352f9/seasons.csv', has been provided. Please #>    update that file if necessary. #> 6. Catchment lookup: This dataset is a csv file containing mappings from #>    catchment codes to catchment names, used to link the DSS data, which uses #>    catchment names, to the CHAMPS analysis dataset, which uses catchment IDs. A #>    dataset with known catchment lookups, #>    '/tmp/Rtmpsh2yKy/file2c3d447352f9/catchment_lookup.csv', has been provided. #>    Please update that file if necessary. #> 7. Live births: This dataset is a csv file containing yearly live births by #>    site and catchment from DSS. A dataset with known live birth statistics by #>    site, catchment, and year, #>    '/tmp/Rtmpsh2yKy/file2c3d447352f9/live_births.csv', has been provided. #>    Please update that file if necessary. #> 8. Live births: This dataset is a csv file containing yearly DHS all-cause #>    mortality data by site and catchment from DSS. A dataset with known DHS #>    statistics by site, catchment, year, and age, #>    '/tmp/Rtmpsh2yKy/file2c3d447352f9/dhs.csv', has been provided. Please update #>    that file if necessary. #>  #> → Once the files are in place, edit the file #>   /tmp/Rtmpsh2yKy/file2c3d447352f9/config.yaml to provide the file names #>   corresponding to each of these datasets. #>  #> The config.yaml template looks like this: #>     ┌──────────────────────────────────────────┐ #>     │  champs_analytics_dataset: ''            │ #>     │  maternal_registry_dataset: ''           │ #>     │  champs_vocabulary_dataset: ''           │ #>     │  dss_dataset: ''                         │ #>     │  season_lookup: seasons.csv              │ #>     │  catchment_lookup: catchment_lookup.csv  │ #>     │  live_births_dataset: live_births.csv    │ #>     │  dhs_dataset: dhs.csv                    │ #>     └──────────────────────────────────────────┘ #>  #> So for example, if the CHAMPS Analytics Dataset you placed in this directory is #> named 'Analytics_Dataset_2021-09-01.xlsx', you would edit the corresponding #> line in config.yaml as follows: #>     ┌─────────────────────────────────────────────────────────────────┐ #>     │  champs_analytics_dataset: 'Analytics_Dataset_2021-09-01.xlsx'  │ #>     └─────────────────────────────────────────────────────────────────┘ list.files(data_dir) #> [1] \"catchment_lookup.csv\" \"config.yaml\"          \"dhs.csv\"              #> [4] \"seasons.csv\" cat(paste(readLines(file.path(data_dir, \"config.yaml\")), collapse = \"\\n\")) #> champs_analytics_dataset: '' #> maternal_registry_dataset: '' #> champs_vocabulary_dataset: '' #> dss_dataset: '' #> season_lookup: seasons.csv #> catchment_lookup: catchment_lookup.csv #> live_births_dataset: live_births.csv #> dhs_dataset: dhs.csv"},{"path":"https://ki-tools.github.io/champs-mortality/articles/methodology.html","id":"child-health-and-mortality-prevention-surveillance","dir":"Articles","previous_headings":"","what":"Child Health and Mortality Prevention Surveillance","title":"Methodology","text":"Child Health Mortality Prevention Surveillance (CHAMPS) Network collects accurate comprehensive cause death data stillbirths children five years age 12 surveillance sites seven countries throughout Sub-Saharan Africa South Asia: Baliakandi Faridpur, Bangladesh; Harar, Kersa Haramaya, Ethiopia; Siaya Kisumu, Kenya; Bamako, Mali; Manhiça Quelimane, Mozambique; Bombali, Sierra Leone; Soweto, South Africa. CHAMPS site Mozambique began enrolment 2016; sites South Africa, Kenya, Mali, Bangladesh began 2017; Sierra Leone Ethiopia began 2019. sites -five mortality rates (U5MR) greater 50 per 1,000 live-births time site selection 2015.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/methodology.html","id":"demographic-surveillance-system","dir":"Articles","previous_headings":"","what":"Demographic Surveillance System","title":"Methodology","text":"sites - except Sierra Leone, Quelimane Mozambique, Faridpur Bangladesh - carried mortality surveillance within health demographic surveillance system (DSS) captures sociodemographic data major events births, deaths, pregnancies, - -migration episodes within geographically defined area estimate size structure population. DSS platforms vary maturity throughout CHAMPS network new study period.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/methodology.html","id":"cause-of-death","dir":"Articles","previous_headings":"","what":"[Cause of Death]","title":"Methodology","text":"CHAMPS deaths, excluding stillbirths, whose families consented minimally invasive tissue sampling (MITS) 1st January 2017 31st December 2020, assigned cause death Determination Cause Death (DeCoDe) panel August 23, 2022 included. Cases determined died due [cause] assigned one following International Classification Diseases, Revision 10 (ICD-10) codes: [list ICD-10 codes]. [cause] classified either underlying cause death anywhere causal chain (immediate, underlying, /comorbid causes).","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/methodology.html","id":"cause-specific-mortality-fractions","dir":"Articles","previous_headings":"","what":"Cause-Specific Mortality Fractions","title":"Methodology","text":"Crude cause-specific mortality fractions (cCSMF) calculated catchment site proportion deaths attributed [cause] among MITS deaths reviewed DeCoDe panels. calculate adjusted cause-specific mortality fractions (aCSMF), factors hypothesized affect selection (age child, sex child, location death, season death, verbal autopsy [VA] cause death) meet four priori criteria adjustment: (1) statistically significantly associated MITS consent (p<0.10) chi-square tests; (2) missing <20% data comparing MITS non-MITS deaths; (3) statistically significantly associated [cause] cause death (p<0.10) chi-square tests; (4) missing <20% data comparing [cause] non-[cause] deaths. one two (due data limitations) met four criteria selected adjustment. CHAMPS deaths (non-MITS MITS), MITS deaths, deaths target population stratified factors met selection. Selection probabilities calculated proportion MITS deaths among eligible deaths target population strata. Due sparse data, stratum zero [cause] deaths, combined another stratum closest selection probability. Direct standardization performed. target population sites eligible deaths ascertained DSS respective catchment area site. However, sites catchments DSS data unavailable, target population consists CHAMPS deaths regardless MITS consent.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/methodology.html","id":"cause-specific-mortality-rates","dir":"Articles","previous_headings":"","what":"Cause-Specific Mortality Rates","title":"Methodology","text":"Crude adjusted cause-specific mortality rates (cCSMR aCSMR) calculated product cCSMF aCSMF -cause U5MR, respectively. DSS data available, -cause U5MR target population calculated number -five deaths among live-births. DSS data unavailable, -cause U5MR target population sourced Demographic Health Surveys (DHS) Program; case, -cause U5MR may represent larger geographic region catchment , year data collection may exactly coincide CHAMPS. Due sparse data better coverage properties, 90% Bayesian credible intervals (CrI) based non-informative prior distribution calculated estimates. Analyses performed R 4.2.1 (R Core Team, Vienna, Austria). CHAMPS protocol approved ethics committees sites Emory University.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/articles/reports.html","id":"plotting-rates-and-fractions","dir":"Articles","previous_headings":"","what":"Plotting rates and fractions","title":"Creating Reports","text":"can plot crude adjusted rates (= \"rate\") fractions (= \"frac\") along credible intervals set results following:   Note setting plotly=FALSE. default TRUE case interactive version visualization made available.","code":"plot_rates_fracs(graf, which = \"rate\", plotly = FALSE) plot_rates_fracs(graf, which = \"frac\", plotly = FALSE)"},{"path":"https://ki-tools.github.io/champs-mortality/articles/reports.html","id":"overview-table","dir":"Articles","previous_headings":"","what":"Overview table","title":"Creating Reports","text":"get nice-looking overview table shows rates fractions scenario along useful information, can following:","code":"table_rates_fracs(graf)"},{"path":"https://ki-tools.github.io/champs-mortality/articles/reports.html","id":"factor-adjustment-decision-table","dir":"Articles","previous_headings":"","what":"Factor adjustment decision table","title":"Creating Reports","text":"view p-values % missing statistics went decision factors adjusted scenario, can use table_adjust_decision():","code":"table_adjust_decision(graf)"},{"path":"https://ki-tools.github.io/champs-mortality/articles/reports.html","id":"factor-adjustment-underlying-statistics","dir":"Articles","previous_headings":"","what":"Factor adjustment underlying statistics","title":"Creating Reports","text":"can go even detail looking underlying statistics adjustment deciions made function table_factor_sig_stats(), can called either “mits” “cond”.","code":"table_factor_sig_stats(graf, which = \"mits\") table_factor_sig_stats(graf, which = \"cond\")"},{"path":"https://ki-tools.github.io/champs-mortality/articles/reports.html","id":"static-summary-app","dir":"Articles","previous_headings":"","what":"Static summary app","title":"Creating Reports","text":"Coming…","code":""},{"path":"https://ki-tools.github.io/champs-mortality/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ryan Hafen. Maintainer, author. J Hathaway. Author.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hafen R, Hathaway J (2022). champsmortality: Calculate mortality fractions rates CHAMPS sites. R package version 0.0.1, https://ki-tools.github.io/champs-mortality/.","code":"@Manual{,   title = {champsmortality: Calculate mortality fractions and rates for CHAMPS sites},   author = {Ryan Hafen and J Hathaway},   year = {2022},   note = {R package version 0.0.1},   url = {https://ki-tools.github.io/champs-mortality/}, }"},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"champsmortality","dir":"","previous_headings":"","what":"Calculate mortality fractions and rates for CHAMPS sites","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"goal champsmortality provide functions calculating mortality fractions rates CHAMPS sites various causes. high-level walkthrough major pacakge functionality workflow. Read additional articles depth: Getting Started Datasets Computing Adjusted Rates Fractions Creating Reports Methodology","code":""},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"can install development version champsmortality following:","code":"install.packages(\"remotes\") # one time only remotes::install_github(\"ki-tools/champs-mortality\")"},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"package useful real data obtainable CHAMPS. purposes documentation examples, package ships synthetic datasets. , keep mind results examples documentation meaningful.","code":"library(champsmortality)"},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"data-setup","dir":"","previous_headings":"Example","what":"Data setup","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"first time use package, need place appropriate data files data directory package pull perform calculations. function create_dataset_directory() provided help get set . something needs done . Public data comes package placed , additional private datasets need added. required datasets expected formats can found article. purpose examples, change data_dir point directory containing synthetic data. SKIP STEP WORKING REAL DATA.","code":"data_dir <- tempfile() create_dataset_directory(data_dir) #> ✔ The directory #>   '/var/folders/7b/thg__1xx7w98wc4rs8t3djrw0000gn/T//RtmpJ41PFB/file80d045c5ad26' is ready #>   for the appropriate data files to be placed in it. The following datasets should be placed #>   in this directory: #>  #> 1. CHAMPS Analytics Dataset: This dataset is available as a downloadable file from LabKey and #>    is continuously updated. It contains most of the CHAMPS variables that are needed for the #>    analysis. #> 2. Maternal Registry Forms table: This dataset is also available as a downloadable file from #>    LabKey and contains information about maternal age and education. #> 3. CHAMPS vocabulary: This dataset provides a lookup table for all CHAMPS codes, providing a #>    corresponding 'name' and 'preferred name' for each. This file is accessible from the #>    CHAMPS L2 dataset from dataverse. #> 4. DSS: This dataset contains counts of cases from the demographic surveillance system (DSS) #>    corresponding to each CHAMPS site and catchment area, only for DSS cases that are not in #>    the CHAMPS data. These counts are broken down by age group, year, location of death, #>    season of death, maternal education, sex of child, and verbal autopsy cause of death. #> 5. Season definition: This dataset is a csv file containing rainy and dry season date ranges #>    for each site, which will be used to classify the season in which each case occurs. A #>    dataset with known season definitions, #>    '/var/folders/7b/thg__1xx7w98wc4rs8t3djrw0000gn/T//RtmpJ41PFB/file80d045c5ad26/seasons.csv', #>    has been provided. Please update that file if necessary. #> 6. Catchment lookup: This dataset is a csv file containing mappings from catchment codes to #>    catchment names, used to link the DSS data, which uses catchment names, to the CHAMPS #>    analysis dataset, which uses catchment IDs. A dataset with known catchment lookups, #>    '/var/folders/7b/thg__1xx7w98wc4rs8t3djrw0000gn/T//RtmpJ41PFB/file80d045c5ad26/catchment_lookup.csv', #>    has been provided. Please update that file if necessary. #> 7. Live births: This dataset is a csv file containing yearly live births by site and #>    catchment from DSS. A dataset with known live birth statistics by site, catchment, and #>    year, #>    '/var/folders/7b/thg__1xx7w98wc4rs8t3djrw0000gn/T//RtmpJ41PFB/file80d045c5ad26/live_births.csv', #>    has been provided. Please update that file if necessary. #> 8. Live births: This dataset is a csv file containing yearly DHS all-cause mortality data by #>    site and catchment from DSS. A dataset with known DHS statistics by site, catchment, year, #>    and age, #>    '/var/folders/7b/thg__1xx7w98wc4rs8t3djrw0000gn/T//RtmpJ41PFB/file80d045c5ad26/dhs.csv', #>    has been provided. Please update that file if necessary. #>  #> → Once the files are in place, edit the file #>   /var/folders/7b/thg__1xx7w98wc4rs8t3djrw0000gn/T//RtmpJ41PFB/file80d045c5ad26/config.yaml #>   to provide the file names corresponding to each of these datasets. #>  #> The config.yaml template looks like this: #>     ┌──────────────────────────────────────────┐ #>     │  champs_analytics_dataset: ''            │ #>     │  maternal_registry_dataset: ''           │ #>     │  champs_vocabulary_dataset: ''           │ #>     │  dss_dataset: ''                         │ #>     │  season_lookup: seasons.csv              │ #>     │  catchment_lookup: catchment_lookup.csv  │ #>     │  live_births_dataset: live_births.csv    │ #>     │  dhs_dataset: dhs.csv                    │ #>     └──────────────────────────────────────────┘ #>  #> So for example, if the CHAMPS Analytics Dataset you placed in this directory is named #> 'Analytics_Dataset_2021-09-01.xlsx', you would edit the corresponding line in config.yaml as #> follows: #>     ┌─────────────────────────────────────────────────────────────────┐ #>     │  champs_analytics_dataset: 'Analytics_Dataset_2021-09-01.xlsx'  │ #>     └─────────────────────────────────────────────────────────────────┘ data_dir <- file.path(system.file(package = \"champsmortality\"), \"testdata\")"},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"read-the-data","dir":"","previous_headings":"Example","what":"Read the data","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"set appropriate files placed mapped config.yaml file, can read data following: read data files ensure variables required perform calculations present. , see error message need correct error able use package.","code":"d <- read_and_validate_data(data_dir) #> ✔ analytics_2022-05-24.csv #> ✔ vocabulary_2022-05-24.csv #> ✔ registry_2022-05-24.csv #> ✔ dss_2022-05-24.csv #> ✔ seasons.csv #> ✔ catchment_lookup.csv #> ✔ live_births.csv #> ✔ dhs.csv"},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"process-the-data","dir":"","previous_headings":"Example","what":"Process the data","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"function, process_data() takes data read joins together create dataset ready analysis.","code":"dd <- process_data(d, start_year = 2017, end_year = 2020) #>  #> ── processing analysis dataset ─────────────────────────────────────────────────────────────── #> ✔ Calculated year of death from 'calc_dod' #> ✔ Used CHAMPS vocabulary to transform 'age_group' in analysis dataset #> ✔ Created a new variable 'age' that rolls up all neonates into one category to be compatible #> with DSS data #> ✔ Used CHAMPS vocabulary to transform 'calc_sex' in analysis dataset #> ✔ Classified Verbal Autopsy Inter-VA Cause 1 codes as 'Infection', 'Trauma', 'Other', or NA #> ✔ Removed 2879 records that occur before 2017 or after 2020 or have a missing date of death #> ✔ Resolved catchment names from catchment IDs using catchment lookup table #> ✔ Checked that values for 'catchment' in the analysis dataset are correct #> ✔ Modified some analysis set variables to match what is found in DSS data: #> • sex: set 'Indeterminate' and 'Unknown' to NA #> • location: 'other' to NA #> ✔ Checked that values for 'age' in the analysis dataset are correct #> ✔ Checked that values for 'calc_sex' in the analysis dataset are correct #> ✔ Checked that values for 'calc_location' in the analysis dataset are correct #> ✔ Checked that values for 'va_cod_iva' in the analysis dataset are correct #> ✔ Checked that values for 'site_name' in the seasons lookup are correct #> ✔ Calculated season of death #> ✔ Checked that values for 'season' in the seasons lookup are correct #>  #> ── processing maternal registry ────────────────────────────────────────────────────────────── #> ✔ Removed 244 records with missing 'champsid' from maternal registry dataset #> ✔ The following 47 CHAMPS IDs have duplicate entries in the maternal registry dataset and #> only the first record for each was kept: SEAA00272, SFAA00050, SHAA00046, SHAA00052, #> SHAA00700, SHAA00882, SHAA00958, SHAA01135, SHAA01553, SHAA01898, SHAA01935, SHAA02086, #> SHAA02123, SHCC00294, SIAA00004, SIAA00076, SIAA00104, SIAA00327, SIAA00428, SIAA00518, #> SIAA00605, SIAA00851, SIAA00921, SIAA00935, SIAA01277, SIAA01735, SIAA01841, SIAA01891, #> SOAA00370, SOAA00831, SOAA00833, SOAA01383, SOCC00033, SOCC00043, SOCC00091, SOCC00207, #> SOCC00209, SOCC00225, SOCC00236, SOCC00249, SOCC00308, SSAA00025, SSAA00267, SSAA00476, #> SSAA01016, SSAA02207, STAA01650 #> ✔ Used CHAMPS vocabulary to transform 'education' in maternal registry dataset #> ✔ Checked that values for 'education' in the maternal registry dataset are correct #> ✔ Joined analysis dataset and maternal registry #>  #> ── checking live births ────────────────────────────────────────────────────────────────────── #> ✔ Checked that values for 'site' in the live births data are correct #> ✔ Checked that values for 'catchment' in the live births data are correct #>  #> ── checking DHS data ───────────────────────────────────────────────────────────────────────── #> ✔ Checked that values for 'site' in the DHS data are correct #> ✔ Checked that values for 'catchment' in the DHS data are correct #>  #> ── checking DSS ────────────────────────────────────────────────────────────────────────────── #> ✔ Checked that values for 'site' in the DSS data are correct #> ✔ Checked that values for 'catchment' in the DSS data are correct #> ✔ Checked that values for 'age' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'level' in the DSS data are correct #> ✔ Checked that values for 'va' in the DSS data are correct"},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"valid-conditions","dir":"","previous_headings":"Example","what":"Valid conditions","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"Computations data typically goal finding adjusted mortality fractions rates given condition found causal chain. see, can specified either using condition name regular expression indicating ICD10 codes indicate condition. convenience function lists available conditions data provided, valid_conditions(): searches CHAMPS data finds unique condition values found anywhere causal chain. ranking also provided higher ranking indicates condition found frequently data condition lower ranking.","code":"valid_conditions(dd) #> # A tibble: 54 × 2 #>    condition                            `causal chain rank` #>    <chr>                                              <int> #>  1 Perinatal asphyxia/hypoxia                             1 #>  2 Neonatal preterm birth complications                   2 #>  3 Lower respiratory infections                           3 #>  4 Neonatal sepsis                                        4 #>  5 Sepsis                                                 5 #>  6 Congenital birth defects                               6 #>  7 Other neonatal disorders                               7 #>  8 Malnutrition                                           8 #>  9 Meningitis/Encephalitis                                9 #> 10 Malaria                                               10 #> # … with 44 more rows"},{"path":"https://ki-tools.github.io/champs-mortality/index.html","id":"getting-rates-and-fractions","dir":"","previous_headings":"Example","what":"Getting Rates and Fractions","title":"Calculate mortality fractions and rates for CHAMPS sites","text":"main function package computes factor-adjusted mortality rates fractions specified set sites catchments. details methodology can found article. output function contains many pieces information site including underlying statistics went calculations, interesting outputs rates fractions. site S6, example, can extract computed rates fractions following:","code":"graf <- get_rates_and_fractions(   dd,   sites = c(\"S6\", \"S5\", \"S7\"),   catchments = c(\"C1\", \"C4\", \"C3\", \"C5\", \"C6\", \"C7\"),   causal_chain = FALSE,   pval_cutoff = 0.1,   pct_na_cutoff = 20,   condition = \"Lower respiratory infections\") #> Processing site:  S6 #> ℹ The following catchments are not found in the data for site S6 and will be removed from the #> calculations for this site: C4, C3, C5, C6, C7 #>   no adjustment variables #> Processing site:  S5 #> ℹ The following catchments are not found in the data for site S5 and will be removed from the #> calculations for this site: C1, C6, C7 #>   using adjustment variables: age, location #> Processing site:  S7 #> ℹ The following catchments are not found in the data for site S7 and will be removed from the #> calculations for this site: C1, C4, C3, C5 #>   using adjustment variable: location #>   other significant factors not adjusted for: va graf$S6$rate #> # A tibble: 2 × 8 #>   site  catchments var    label                                 allcauseMR   est  lower upper #>   <chr> <chr>      <chr>  <chr>                                      <dbl> <dbl>  <dbl> <dbl> #> 1 S6    C1         cTU5MR Crude total under-5 mortality rate          591.     0 0.0140  13.5 #> 2 S6    C1         aTU5MR Adjusted total under-5 mortality rate       591.     0 0.0140  13.5 graf$S6$frac #> # A tibble: 2 × 9 #>   site  catchments var   label                              decode condi…¹   est   lower upper #>   <chr> <chr>      <chr> <chr>                               <int>   <int> <dbl>   <dbl> <dbl> #> 1 S6    C1         cCSMF Crude cause-specific mortality fr…     83       0     0 0.00236  2.28 #> 2 S6    C1         aCSMF Adjusted cause-specific mortality…     83       0     0 0.00236  2.28 #> # … with abbreviated variable name ¹​condition"},{"path":"https://ki-tools.github.io/champs-mortality/reference/batch_rates_and_fractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rates and fraction of an input list of values. — batch_rates_and_fractions","title":"Calculate rates and fraction of an input list of values. — batch_rates_and_fractions","text":"Allows user provide input table CSV format iteratively calculate results using get_rates_and_fractions() output returned one row per set inputs.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/batch_rates_and_fractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rates and fraction of an input list of values. — batch_rates_and_fractions","text":"","code":"batch_rates_and_fractions(dat, inputs)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/batch_rates_and_fractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rates and fraction of an input list of values. — batch_rates_and_fractions","text":"dat Processed CHAMPS dataset. inputs Path csv file specifying scenario run columns 'site','catchment', 'age', 'condition', 'icd10_regex', 'causal_chain'. columns 'age', 'condition' ,'site', 'catchment' can multiple values separated semicolon. variables specify parameters passed get_rates_and_fractions() Alternately, can list named lists parameters names csv file. See examples .","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/champs_web_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create html outputs for a given mortality rate/fraction analysis — champs_web_report","title":"Create html outputs for a given mortality rate/fraction analysis — champs_web_report","text":"Create html outputs given mortality rate/fraction analysis","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/champs_web_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create html outputs for a given mortality rate/fraction analysis — champs_web_report","text":"","code":"champs_web_report(obj, path = tempfile())"},{"path":"https://ki-tools.github.io/champs-mortality/reference/champs_web_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create html outputs for a given mortality rate/fraction analysis — champs_web_report","text":"obj object comes get_rates_and_fractions() path path output html stored","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/combine_decision_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine mits_factor_tables() and cond_factor_tables() output to one\ndecision dataframe — combine_decision_tables","title":"Combine mits_factor_tables() and cond_factor_tables() output to one\ndecision dataframe — combine_decision_tables","text":"Combine mits_factor_tables() cond_factor_tables() output one decision dataframe","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/combine_decision_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine mits_factor_tables() and cond_factor_tables() output to one\ndecision dataframe — combine_decision_tables","text":"","code":"combine_decision_tables(tables_dat)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/combine_decision_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine mits_factor_tables() and cond_factor_tables() output to one\ndecision dataframe — combine_decision_tables","text":"tables_dat named list object table mits_factor_tables() table cond_factor_tables(). names assigned table used naming table columns.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/cond_factor_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute counts of MITS cases and non-cases for a given condition by factors — cond_factor_tables","title":"Compute counts of MITS cases and non-cases for a given condition by factors — cond_factor_tables","text":"Compute counts MITS cases non-cases given condition factors","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/cond_factor_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute counts of MITS cases and non-cases for a given condition by factors — cond_factor_tables","text":"","code":"cond_factor_tables(   x,   sites = NULL,   catchments = NULL,   factor_groups = NULL,   condition = NULL,   icd10_regex = NULL,   maternal = FALSE,   cond_name_short = condition[1],   causal_chain = TRUE,   ctch_info = NULL )"},{"path":"https://ki-tools.github.io/champs-mortality/reference/cond_factor_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute counts of MITS cases and non-cases for a given condition by factors — cond_factor_tables","text":"x Processed CHAMPS dataset. sites vector site names include calculations. NULL, sites data used. catchments vector catchments include calculations. NULL, catchments data used. factor_groups named list specifies group factors condition CHAMPS group specifying condition icd10_regex optional regular expression specifying ICD10 codes define condition. maternal searching maternal condition ICD10 specification? Default FALSE. cond_name_short name condition use outputs (e.g. condition \"Congenital birth defects\", cond_name_short \"CBD\"). Defaults value condition specified. Required icd10_regex specified. causal_chain TRUE, causal chain searched, FALSE, underlying cause searched ctch_info object tracks information catchments data. used internally ignored users.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/create_dataset_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dataset directory with the shell of a config.yaml file — create_dataset_directory","title":"Create a dataset directory with the shell of a config.yaml file — create_dataset_directory","text":"Create dataset directory shell config.yaml file","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/create_dataset_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dataset directory with the shell of a config.yaml file — create_dataset_directory","text":"","code":"create_dataset_directory(path)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/create_dataset_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dataset directory with the shell of a config.yaml file — create_dataset_directory","text":"path path input data stored (must non-existing path existing directory)","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a credible interval for a fraction — get_interval","title":"Get a credible interval for a fraction — get_interval","text":"Get credible interval fraction","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a credible interval for a fraction — get_interval","text":"","code":"get_interval(frac, tot, limit = 90)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a credible interval for a fraction — get_interval","text":"frac fraction tot denominator used compute fraction limit percent confidence limit (0-100)","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rate_frac_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data necessary to compute adjusted mortality fractions and rates — get_rate_frac_data","title":"Get data necessary to compute adjusted mortality fractions and rates — get_rate_frac_data","text":"Get data necessary compute adjusted mortality fractions rates","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rate_frac_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data necessary to compute adjusted mortality fractions and rates — get_rate_frac_data","text":"","code":"get_rate_frac_data(   x,   site,   catchments = NULL,   condition = NULL,   icd10_regex = NULL,   maternal = FALSE,   causal_chain = TRUE,   adjust_vars = NULL,   factor_groups = NULL,   ctch_info = NULL )"},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rate_frac_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data necessary to compute adjusted mortality fractions and rates — get_rate_frac_data","text":"x object read read_and_validate_data() site site name get rate data catchments vector catchments include calculations condition CHAMPS condition (see valid_conditions()) icd10_regex optional regular expression specifying ICD10 codes define condition maternal searching maternal condition ICD10 specification? Default FALSE. causal_chain TRUE, causal chain searched, FALSE, underlying cause searched adjust_vars vector variables adjust factor_groups named list specifies group factors ctch_info object tracks information catchments data.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rate_frac_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get data necessary to compute adjusted mortality fractions and rates — get_rate_frac_data","text":"One icd10_regex condition must specified","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rates_and_fractions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rate and fraction data — get_rates_and_fractions","title":"Get rate and fraction data — get_rates_and_fractions","text":"Get rate fraction data","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rates_and_fractions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rate and fraction data — get_rates_and_fractions","text":"","code":"get_rates_and_fractions(   x,   sites = NULL,   catchments = NULL,   condition = NULL,   icd10_regex = NULL,   maternal = FALSE,   cond_name_short = condition[1],   causal_chain = TRUE,   adjust_vars_override = NULL,   factor_groups = NULL,   pval_cutoff = 0.1,   pct_na_cutoff = 20,   per = 10000 )"},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rates_and_fractions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get rate and fraction data — get_rates_and_fractions","text":"x Processed CHAMPS dataset. sites vector site names include calculations. NULL, sites data used. catchments vector catchments include calculations. NULL, catchments data used. condition CHAMPS group specifying condition icd10_regex optional regular expression specifying ICD10 codes define condition. maternal searching maternal condition ICD10 specification? Default FALSE. cond_name_short name condition use outputs (e.g. condition \"Congenital birth defects\", cond_name_short \"CBD\"). Defaults condition specified. causal_chain TRUE, causal chain searched, FALSE, underlying cause searched adjust_vars_override optional vector adjustment variables override automatic adjustment. two variables must include age. factor_groups named list specifies group factors pval_cutoff P-value variables considered adjustment. Ignored adjust_vars_override specified. pct_na_cutoff Proportion missingness variables considered adjustment. Ignored adjust_vars_override specified. per Calculate rates fractions per many births. 10k default.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_rates_and_fractions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get rate and fraction data — get_rates_and_fractions","text":"One icd10_regex condition must specified","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_site_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of sites and catchments with data start and end years — get_site_info","title":"Get a list of sites and catchments with data start and end years — get_site_info","text":"Get list sites catchments data start end years","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_site_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of sites and catchments with data start and end years — get_site_info","text":"","code":"get_site_info(x)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/get_site_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of sites and catchments with data start and end years — get_site_info","text":"x object read read_and_validate_data()","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_champs_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if a CHAMPS group is in the causal chain — has_champs_group","title":"Check to see if a CHAMPS group is in the causal chain — has_champs_group","text":"Check see CHAMPS group causal chain","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_champs_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if a CHAMPS group is in the causal chain — has_champs_group","text":"","code":"has_champs_group(ads, group, cc = TRUE)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_champs_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if a CHAMPS group is in the causal chain — has_champs_group","text":"ads CHAMPS analysis dataset group string representing CHAMPS group cc TRUE: searches across causal chain, FALSE: searches underlying cause ","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_icd10.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if an ICD10 regular expression is in the causal chain — has_icd10","title":"Check to see if an ICD10 regular expression is in the causal chain — has_icd10","text":"Check see ICD10 regular expression causal chain","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_icd10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if an ICD10 regular expression is in the causal chain — has_icd10","text":"","code":"has_icd10(ads, rgx, cc = TRUE)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_icd10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if an ICD10 regular expression is in the causal chain — has_icd10","text":"ads CHAMPS analysis dataset rgx regular expression representing ICD10 codes cc TRUE: searches across causal chain, FALSE: searches underlying cause ","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_maternal_champs_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if a CHAMPS group is in the main maternal cause — has_maternal_champs_group","title":"Check to see if a CHAMPS group is in the main maternal cause — has_maternal_champs_group","text":"Check see CHAMPS group main maternal cause","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_maternal_champs_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if a CHAMPS group is in the main maternal cause — has_maternal_champs_group","text":"","code":"has_maternal_champs_group(ads, group)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_maternal_champs_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if a CHAMPS group is in the main maternal cause — has_maternal_champs_group","text":"ads CHAMPS analysis dataset group string representing CHAMPS group","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_maternal_icd10.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if an ICD10 regular expression is in the main maternal cause — has_maternal_icd10","title":"Check to see if an ICD10 regular expression is in the main maternal cause — has_maternal_icd10","text":"Check see ICD10 regular expression main maternal cause","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_maternal_icd10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if an ICD10 regular expression is in the main maternal cause — has_maternal_icd10","text":"","code":"has_maternal_icd10(ads, rgx)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/has_maternal_icd10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if an ICD10 regular expression is in the main maternal cause — has_maternal_icd10","text":"ads CHAMPS analysis dataset rgx regular expression representing ICD10 codes","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/mits_factor_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute counts of MITS and non-MITS+DSS-only deaths by factors — mits_factor_tables","title":"Compute counts of MITS and non-MITS+DSS-only deaths by factors — mits_factor_tables","text":"Compute counts MITS non-MITS+DSS-deaths factors","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/mits_factor_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute counts of MITS and non-MITS+DSS-only deaths by factors — mits_factor_tables","text":"","code":"mits_factor_tables(   x,   sites = NULL,   catchments = NULL,   factor_groups = NULL,   ctch_info = NULL )"},{"path":"https://ki-tools.github.io/champs-mortality/reference/mits_factor_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute counts of MITS and non-MITS+DSS-only deaths by factors — mits_factor_tables","text":"x Processed CHAMPS dataset. sites vector site names include calculations. NULL, sites data used. catchments vector catchments include calculations. NULL, catchments data used. factor_groups named list specifies group factors ctch_info object tracks information catchments data. used internally ignored users.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/plot_rates_fracs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a plot of rates or fractions — plot_rates_fracs","title":"Create a plot of rates or fractions — plot_rates_fracs","text":"Create plot rates fractions","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/plot_rates_fracs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a plot of rates or fractions — plot_rates_fracs","text":"","code":"plot_rates_fracs(   obj,   which = \"frac\",   height = \"100%\",   width = 800,   plotly = TRUE )"},{"path":"https://ki-tools.github.io/champs-mortality/reference/plot_rates_fracs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a plot of rates or fractions — plot_rates_fracs","text":"obj object get_rates_and_fractions() one \"frac\" \"rate\" height height plot using plotly width width plot using plotly plotly result plotly graph?","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/process_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a set of CHAMPS data files — process_data","title":"Process a set of CHAMPS data files — process_data","text":"Process set CHAMPS data files","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/process_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a set of CHAMPS data files — process_data","text":"","code":"process_data(x, start_year, end_year)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/process_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a set of CHAMPS data files — process_data","text":"x object read read_and_validate_data() start_year start year filtering data end_year end year filtering data","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/rates_fracs_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for get_rates_and_fractions() — rates_fracs_to_df","title":"Wrapper for get_rates_and_fractions() — rates_fracs_to_df","text":"Converts detailed output get_rates_and_fractions() data frame major output statistics.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/rates_fracs_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for get_rates_and_fractions() — rates_fracs_to_df","text":"","code":"rates_fracs_to_df(dat)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/rates_fracs_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for get_rates_and_fractions() — rates_fracs_to_df","text":"dat list outputs either get_rates_and_fractions() batch_rates_and_fractions().","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/read_and_validate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and validate data files from a specified directory — read_and_validate_data","title":"Read and validate data files from a specified directory — read_and_validate_data","text":"Read validate data files specified directory","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/read_and_validate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and validate data files from a specified directory — read_and_validate_data","text":"","code":"read_and_validate_data(data_path)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/read_and_validate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and validate data files from a specified directory — read_and_validate_data","text":"data_path path containing config.yaml data files","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_adjust_decision.html","id":null,"dir":"Reference","previous_headings":"","what":"Selected variables decision table — table_adjust_decision","title":"Selected variables decision table — table_adjust_decision","text":"Selected variables decision table","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_adjust_decision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selected variables decision table — table_adjust_decision","text":"","code":"table_adjust_decision(   obj,   alpha_value = 0.1,   pmissing = 20,   percent_digits = 1 )"},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_adjust_decision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selected variables decision table — table_adjust_decision","text":"obj object comes get_rates_and_fractions() alpha_value threshold compare p-value. Cells colored based value pmissing percent missing allowed factor considered decision table. Cells colored using value. percent_digits number digits round percent missing .","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_factor_sig_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Build pretty table of factor significance and level counts — table_factor_sig_stats","title":"Build pretty table of factor significance and level counts — table_factor_sig_stats","text":"Build pretty table factor significance level counts","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_factor_sig_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build pretty table of factor significance and level counts — table_factor_sig_stats","text":"","code":"table_factor_sig_stats(   obj,   which = c(\"mits\", \"cond\"),   print_columns = c(\"MITS\", \"non-MITS+DSS-only\"),   percent_digits = 1 )"},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_factor_sig_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build pretty table of factor significance and level counts — table_factor_sig_stats","text":"obj output get_rates_and_fractions() batch_get_rates_and_fractions() one site. one \"mits\" \"cond\" specify adjustment statistics display print_columns specific columns nested tibbles table column print. Defaults \"MITS\" \"non-MITS+DSS-\". \"DSS-\" \"non-MITS\" two columns can printed. percent_digits number digits round percent columns . Defaults 1.","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_rates_fracs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an overview table of results — table_rates_fracs","title":"Create an overview table of results — table_rates_fracs","text":"Create overview table results","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_rates_fracs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an overview table of results — table_rates_fracs","text":"","code":"table_rates_fracs(obj)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/table_rates_fracs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an overview table of results — table_rates_fracs","text":"obj object get_rates_and_fractions","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/valid_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of valid conditions found in the causal chain — valid_conditions","title":"Get a list of valid conditions found in the causal chain — valid_conditions","text":"Get list valid conditions found causal chain","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/valid_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of valid conditions found in the causal chain — valid_conditions","text":"","code":"valid_conditions(x)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/valid_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of valid conditions found in the causal chain — valid_conditions","text":"x object read read_and_validate_data()","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/valid_maternal_conditions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of valid maternal conditions — valid_maternal_conditions","title":"Get a list of valid maternal conditions — valid_maternal_conditions","text":"Get list valid maternal conditions","code":""},{"path":"https://ki-tools.github.io/champs-mortality/reference/valid_maternal_conditions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of valid maternal conditions — valid_maternal_conditions","text":"","code":"valid_maternal_conditions(x)"},{"path":"https://ki-tools.github.io/champs-mortality/reference/valid_maternal_conditions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of valid maternal conditions — valid_maternal_conditions","text":"x object read read_and_validate_data()","code":""}]
